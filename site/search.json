[{"fullname": "JORF_reader.JORF_reader", "modulename": "JORF_reader.JORF_reader", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "JORF_reader.JORF_reader.JORF_Reader", "modulename": "JORF_reader.JORF_reader", "qualname": "JORF_Reader", "type": "class", "doc": "<p>The PDF reader object needed to read pdfs.</p>\n"}, {"fullname": "JORF_reader.JORF_reader.JORF_Reader.__init__", "modulename": "JORF_reader.JORF_reader", "qualname": "JORF_Reader.__init__", "type": "function", "doc": "<p>Initialize JORF_Reader class for naturalization pdf parser/person finder</p>\n\n<p>Initializes the class object. PDF files containing the JOs (with names as\ndownloaded from legifrance) must be stored in JOs directory. The default\npath to this folder is in the parent directory where the script is run\n\"JOs\". The extra kwarg argument \"JOs_path\" is accepted if other path pointing\nto this folder is to be given.</p>\n\n<p>To see all the latest JOs published, it is highly recommended to take a look at:\nhttps://www.easytrangers.com/t/liste-des-decrets-de-naturalisation-2021/6199</p>\n\n<h2 id=\"keyword-parameters\"><strong>Keyword Parameters</strong></h2>\n\n<p><code>file_decrees</code> : <em>str</em>, optional.\n    By default \"\".</p>\n\n<pre><code>File path where the decrees json file will be stored\nIf default is left, the file will be saved in r\"results\\decrees.json\".\n</code></pre>\n\n<p><code>file_decrees_string</code> : <em>str</em>, optional.\n    By default \"\".</p>\n\n<pre><code>File path where the processes pdf string json file will be stored\nIf default is left, the file will be saved in r\"results\\decrees_string.json\".\n</code></pre>\n\n<p><code>file_nat</code> : <em>str</em>, optional.\n    By default \"\".</p>\n\n<pre><code>File path where the naturalized person json file will be stored\nIf default is left, the file will be saved in r\"results\\naturalized.json\".\n</code></pre>\n\n<p><code>serie</code> : <em>str</em>, optional.\n    By default \"027\".</p>\n\n<pre><code>String defining the series of interest.\n</code></pre>\n\n<p><code>first_name</code> : <em>str</em>, optional.\n    By default \"\".</p>\n\n<pre><code>The first name of the person of interest.\n</code></pre>\n\n<p><code>last_name</code> : <em>str</em>, optional.\n    By default \"\".</p>\n\n<pre><code>The last name of the person of interest.\n</code></pre>\n\n<p><code>year</code> : <em>str</em>, optional.\n    By default \"2020\".</p>\n\n<pre><code>The year of interest.\n</code></pre>\n\n<h2 id=\"extra-argkwarg-parameters\"><strong>Extra arg/kwarg Parameters</strong></h2>\n\n<p>Allowed extra parameters (<em>args, or *</em>kwargs) passed by specifying the keyword from the following list.\n**kwargs : optional.\nBy default none are passed.</p>\n\n<p><code>JOs_path</code> : <em>str</em></p>\n\n<pre><code>Path to the folder (including folder name) where JOs pdf files are\nstored as downloaded from https://www.legifrance.gouv.fr .\n</code></pre>\n\n<p><code>save_path</code> : <em>str</em></p>\n\n<pre><code>Path to the folder where results will be save. If nothing is passed\neverything will be saved in the place the code is ran /results.\n</code></pre>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">example</span> <span class=\"o\">=</span> <span class=\"n\">JORF_Reader</span><span class=\"p\">()</span>\n</code></pre></div>\n", "parameters": ["self", "file_decrees", "file_decrees_string", "file_nat", "serie", "first_name", "last_name", "year", "kwargs"], "funcdef": "def"}, {"fullname": "JORF_reader.JORF_reader.JORF_Reader.read_pdf", "modulename": "JORF_reader.JORF_reader", "qualname": "JORF_Reader.read_pdf", "type": "function", "doc": "<p>Read the naturalization decrees pdf to extract useful information.</p>\n\n<p>Read all the pages of the pdf where the decree information is, and extract\nall the new naturalized persons and class them in the json data file.</p>\n\n<h2 id=\"parameters\"><strong>Parameters</strong></h2>\n\n<p><code>pdf_path</code> : <em>str</em>, <strong>required</strong>.</p>\n\n<pre><code>PDF path of new naturalization decree.\n</code></pre>\n\n<h2 id=\"keyword-parameters\"><strong>Keyword Parameters</strong></h2>\n\n<p><code>save_json</code> : <em>bool</em>, optional.\n    By default True.</p>\n\n<pre><code>    Saves the json decree string dictionary to default saving files\n    (or specific see extra keyword parameters).\n</code></pre>\n\n<h2 id=\"extra-argkwarg-parameters\"><strong>Extra arg/kwarg Parameters</strong></h2>\n\n<p>Allowed extra parameters (<em>args, or *</em>kwargs) passed by specifying the keyword from the following list.\n**kwargs : optional.\nBy default none are passed.</p>\n\n<p><code>file_decrees_string</code> : <em>str</em></p>\n\n<pre><code>Save file path for decrees string json.\n</code></pre>\n\n<h2 id=\"example\"><strong>Example</strong></h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">example</span> <span class=\"o\">=</span> <span class=\"n\">JORF_Reader</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">example</span><span class=\"o\">.</span><span class=\"n\">read_pdf</span><span class=\"p\">(</span><span class=\"n\">pdf_path</span><span class=\"p\">,)</span>\n</code></pre></div>\n", "parameters": ["self", "pdf_path", "save_json", "kwargs"], "funcdef": "def"}, {"fullname": "JORF_reader.JORF_reader.JORF_Reader.search_serie", "modulename": "JORF_reader.JORF_reader", "qualname": "JORF_Reader.search_serie", "type": "function", "doc": "<p>Search for all persons of a serie in a decree.</p>\n\n<p>Searchs for all persons of a serie in a decree, and if the decree has not\nbeen read, it reads it.</p>\n\n<h2 id=\"keyword-parameters\"><strong>Keyword Parameters</strong></h2>\n\n<p><code>serie</code> : <em>str</em>, optional.\n    By default \"\".</p>\n\n<pre><code>Number of the series (54 per year + special) to look for.\n</code></pre>\n\n<p><code>pdf_path</code> : <em>str</em>, optional.\n    By default \"\".</p>\n\n<pre><code>PDF path of new naturalization decree.\n</code></pre>\n\n<p><code>save_json</code> : <em>bool</em>, optional.\n    By default True.</p>\n\n<pre><code>Saves the json dictionaries to default saving files (or specific see\nextra keyword parameters).\n</code></pre>\n\n<p><code>search_person</code> : <em>bool</em>, optional.\n    By default False.</p>\n\n<pre><code>Calls .search_person method to look for person of interest defined\nupon class object's instantiation.\n</code></pre>\n\n<h2 id=\"extra-argkwarg-parameters\"><strong>Extra arg/kwarg Parameters</strong></h2>\n\n<p>Allowed extra parameters (<em>args, or *</em>kwargs) passed by specifying the keyword from the following list.\n**kwargs : optional.\nBy default none are passed.</p>\n\n<p><code>file_decrees</code> : <em>str</em></p>\n\n<pre><code>Save file path for decrees json.\n</code></pre>\n\n<p><code>file_nat</code> : <em>str</em></p>\n\n<pre><code>Save file path for naturalization json.\n</code></pre>\n\n<h2 id=\"example\">Example</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">example</span> <span class=\"o\">=</span> <span class=\"n\">JORF_Reader</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">example</span><span class=\"o\">.</span><span class=\"n\">read_pdf</span><span class=\"p\">(</span><span class=\"n\">pdf_path</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">example</span><span class=\"o\">.</span><span class=\"n\">search_serie</span><span class=\"p\">(</span><span class=\"s2\">&quot;027&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self", "serie", "pdf_path", "save_json", "search_person", "kwargs"], "funcdef": "def"}, {"fullname": "JORF_reader.JORF_reader.JORF_Reader.search_person", "modulename": "JORF_reader.JORF_reader", "qualname": "JORF_Reader.search_person", "type": "function", "doc": "<p>Looks for a person within the naturalized database</p>\n\n<p>Looks for a person to see if he/she is within the series and prints out\nthe dictionary with information of in what decree he/she has been naturalized.</p>\n\n<h2 id=\"keyword-parameters\"><strong>Keyword Parameters</strong></h2>\n\n<p><code>first_name</code> : <em>str</em>, optional.\n    By default \"\".</p>\n\n<pre><code>The first name of the person of interest.\n</code></pre>\n\n<p><code>last_name</code> : <em>str</em>, optional.\n    By default \"\".</p>\n\n<pre><code>The last name of the person of interest.\n</code></pre>\n\n<p><code>know_serie</code> : <em>bool</em>, optional.\n    By default True.</p>\n\n<pre><code>True or False if the persons series is known and currently set in\nself.serie value.\n</code></pre>\n\n<h2 id=\"returns\"><strong>Returns</strong></h2>\n\n<p><code>Union[dict,str]</code>:</p>\n\n<p>Either the dictionary of the information of the person if found, or a\nmessage warning the person was not found or string was misspelled.</p>\n\n<h2 id=\"example\"><strong>Example</strong></h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">example</span> <span class=\"o\">=</span> <span class=\"n\">JORF_Reader</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">example</span><span class=\"o\">.</span><span class=\"n\">search_person</span><span class=\"p\">(</span><span class=\"n\">first_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Alejandro&quot;</span><span class=\"p\">,</span><span class=\"n\">last_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Villarreal&quot;</span><span class=\"p\">,)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"p\">)</span>\n<span class=\"go\">{&#39;VILLARREAL LARRAURI (Alejandro)&#39;: {&#39;date&#39;: &#39;23/06/2021&#39;}, &#39;dep&#39;: &#39;013&#39;, &#39;country&#39;: &#39;Mexique&#39;}</span>\n</code></pre></div>\n", "parameters": ["self", "first_name", "last_name", "know_series"], "funcdef": "def"}, {"fullname": "JORF_reader.JORF_reader.JORF_Reader.get_date", "modulename": "JORF_reader.JORF_reader", "qualname": "JORF_Reader.get_date", "type": "function", "doc": "<p>Static method to get the date of the decree.</p>\n\n<p>Extract the date of the decree by reading specific argument of the PDF\ntitle page.</p>\n\n<h2 id=\"parameters\"><strong>Parameters</strong></h2>\n\n<p><code>pdf</code> : <em>PDFDocument</em>, <strong>required</strong>.</p>\n\n<pre><code>Loaded PDF object from py_pdf_parser library.\n</code></pre>\n\n<h2 id=\"returns\"><strong>Returns</strong></h2>\n\n<p><code>str</code>:</p>\n\n<p>Date of the decree.</p>\n\n<h2 id=\"example\"><strong>Example</strong></h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">JORF_Reader</span><span class=\"o\">.</span><span class=\"n\">get_date</span><span class=\"p\">(</span><span class=\"n\">pdf</span><span class=\"p\">,))</span>\n<span class=\"go\">15/08/2021</span>\n</code></pre></div>\n", "parameters": ["pdf"], "funcdef": "def"}, {"fullname": "JORF_reader.JORF_reader.JORF_Reader.get_decrees_count", "modulename": "JORF_reader.JORF_reader", "qualname": "JORF_Reader.get_decrees_count", "type": "function", "doc": "<p>Count the degrees contained in the pdf.</p>\n\n<p>Read a part of the title page and count only the amount of naturalization\ndecrees contianed in the pdf.</p>\n\n<h2 id=\"parameters\"><strong>Parameters</strong></h2>\n\n<p><code>pdf</code> : <em>PDFDocument</em>, <strong>required</strong>.</p>\n\n<pre><code>Loaded PDF object from py_pdf_parser library.\n</code></pre>\n\n<h2 id=\"returns\"><strong>Returns</strong></h2>\n\n<p><code>int</code>:</p>\n\n<p>Number of naturalization decrees contained in the pdf.</p>\n\n<h2 id=\"example\"><strong>Example</strong></h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">JORF_Reader</span><span class=\"o\">.</span><span class=\"n\">get_decrees_count</span><span class=\"p\">(</span><span class=\"n\">pdf</span><span class=\"p\">,))</span>\n<span class=\"go\">3</span>\n</code></pre></div>\n", "parameters": ["pdf"], "funcdef": "def"}]